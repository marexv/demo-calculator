{"version":3,"sources":["Styles.js","App.js","serviceWorker.js","index.js"],"names":["btn","light","dark","css","_templateObject","btnDefault","_templateObject2","btnPrimary","styled","div","_templateObject3","uuid","require","sleep","ms","Promise","resolve","setTimeout","onSubmit","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","values","wrap","_context","prev","next","window","alert","JSON","stringify","stop","this","_x","apply","arguments","CustomerDetails","props","react_default","createElement","Styles","react_final_form_es","initialValues","customerType","validate","errors","segmentheight","segmenwidth","render","_ref2","handleSubmit","form","reset","submitting","pristine","onChange","subscription","name","component","type","placeholder","value","SegmentDetails","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","console","log","maringLeft0Style","marginLeft","panelType","_ref3","_ref4","input","meta","assign","error","touched","_ref5","style","multiple","className","disabled","onClick","React","Component","Segment","segment","price","toLocaleString","navigator","language","minimumFractionDigits","deleteSegmentOnClick","Project","_this","state","segments","customer","id","v1","panelPrice","Cement_Board","Cement_Board_MF","priceCalc","setState","prevState","concat","toConsumableArray","reduce","acc","obj","slice","indexToRemove","findIndex","seg","splice","_this2","href","App_CustomerDetails","myOnChange","App_SegmentDetails","saveSegmentOnClick","handleCompleteProject","map","App_Segment","key","App","App_Project","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4075f663.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nconst btn = (light, dark) => css`\r\n  white-space: nowrap;\r\n  display: inline-block;\r\n  border-radius: 5px;\r\n  padding: 5px 15px;\r\n  font-size: 16px;\r\n  color: white;\r\n  &:visited {\r\n    color: white;\r\n  }\r\n  background-image: linear-gradient(${light}, ${dark});\r\n  border: 1px solid ${dark};\r\n  &:hover {\r\n    background-image: linear-gradient(${light}, ${dark});\r\n    &[disabled] {\r\n      background-image: linear-gradient(${light}, ${dark});\r\n    }\r\n  }\r\n  &:visited {\r\n    color: black;\r\n  }\r\n  &[disabled] {\r\n    opacity: 0.6;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst btnDefault = css`${btn(\"#ffffff\", \"#d5d5d5\")} color: #555;`;\r\n\r\nconst btnPrimary = btn(\"#4f93ce\", \"#285f8f\");\r\n\r\nexport default styled.div`\r\n  font-family: sans-serif;\r\n\r\n  h1 {\r\n    text-align: center;\r\n    color: #222;\r\n  }\r\n\r\n  & > div {\r\n    text-align: center;\r\n  }\r\n\r\n  a {\r\n    display: block;\r\n    text-align: center;\r\n    color: #222;\r\n  }\r\n\r\n  form, .use-style {\r\n    max-width: 500px;\r\n    margin: 10px auto;\r\n    border: 1px solid #ccc;\r\n    padding: 20px;\r\n    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);\r\n    border-radius: 3px;\r\n\r\n    & > div {\r\n      display: flex;\r\n      flex-flow: row nowrap;\r\n      line-height: 2em;\r\n      margin: 5px;\r\n      & > label {\r\n        color: #333;\r\n        width: 110px;\r\n        font-size: 1em;\r\n        line-height: 32px;\r\n      }\r\n      & > input,\r\n      & > select,\r\n      & > textarea {\r\n        flex: 1;\r\n        padding: 3px 5px;\r\n        font-size: 1em;\r\n        margin-left: 15px;\r\n        border: 1px solid #ccc;\r\n        border-radius: 3px;\r\n      }\r\n      & > input[type=\"checkbox\"] {\r\n        margin-top: 7px;\r\n      }\r\n      & > div {\r\n        margin-left: 16px;\r\n        & > label {\r\n          display: block;\r\n          & > input {\r\n            margin-right: 3px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    & > .buttons {\r\n      display: flex;\r\n      flex-flow: row nowrap;\r\n      justify-content: center;\r\n      margin-top: 15px;\r\n    }\r\n    button {\r\n      margin: 0 10px;\r\n      &[type=\"submit\"] {\r\n        ${btnPrimary};\r\n      }\r\n      &[type=\"button\"] {\r\n        ${btnDefault};\r\n      }\r\n    }\r\n    pre {\r\n      border: 1px solid #ccc;\r\n      background: rgba(0, 0, 0, 0.1);\r\n      box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.2);\r\n      padding: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\n","import React, { Component } from 'react';\r\nimport Styles from './Styles'\r\nimport './App.css';\r\nimport { Form, Field, FormSpy } from 'react-final-form'\r\n\r\nconst uuid = require('react-native-uuid');\r\n\r\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\nconst priceCalc = (props) => {\r\n  var panelPrice = 0;\r\n\r\n  console.log(props);\r\n\r\n  if (props.panelType.Cement_Board) {\r\n    panelPrice = 10;\r\n  } else if (props.panelType.Cement_Board_MF) {\r\n    panelPrice = 20;\r\n  } else {\r\n    panelPrice = 30;\r\n  }\r\n\r\n  var price = props.segmentheight * props.segmenwidth * (0.000001) * panelPrice;\r\n\r\n  return price;\r\n}\r\n\r\nconst onSubmit = async values => {\r\n  await sleep(300);\r\n  window.alert(JSON.stringify(values, 0, 2));\r\n};\r\n\r\nconst CustomerDetails = (props) => (\r\n  <Styles>\r\n    <Form\r\n      onSubmit={onSubmit}\r\n      initialValues={{ customerType: 'b2b' }}\r\n      validate={values => {\r\n        const errors = {};\r\n        if (!values.segmentheight) {\r\n          errors.segmentheight = \"Required\";\r\n        } else if (values.segmentheight < 0) {\r\n          errors.segmentheight = \"Must be positive\";\r\n        }\r\n\r\n        if (!values.segmenwidth) {\r\n          errors.segmenwidth = \"Required\";\r\n        } else if (values.segmenwidth < 0) {\r\n          errors.segmenwidth = \"Must be positive\";\r\n        }\r\n\r\n        return errors;\r\n      }}\r\n\r\n      render={({ handleSubmit, form, reset, submitting, pristine, values }) => (\r\n        <div>\r\n          <div>\r\n            <FormSpy onChange={props.onChange} subscription={{ values: true }} />\r\n          </div>\r\n          <div>\r\n            <form>\r\n              <div>\r\n                <label>Customer</label>\r\n                <Field\r\n                  name=\"customer\"\r\n                  component=\"input\"\r\n                  type=\"text\"\r\n                  placeholder=\"Customer Name\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label>Customer Type</label>\r\n                <div>\r\n                  <label>\r\n                    <Field\r\n                      name=\"customerType\"\r\n                      component=\"input\"\r\n                      type=\"radio\"\r\n                      value=\"b2b\"\r\n                    />{' '}\r\n                    B2B\r\n             </label>\r\n                  <label>\r\n                    <Field\r\n                      name=\"customerType\"\r\n                      component=\"input\"\r\n                      type=\"radio\"\r\n                      value=\"b2c\"\r\n                    />{' '}\r\n                    B2C\r\n            </label>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <label>Notes</label>\r\n                <Field name=\"notes\" component=\"textarea\" placeholder=\"Notes\" />\r\n              </div>\r\n              {/* <pre>{JSON.stringify(values, 0, 2)}</pre> */}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    />\r\n  </Styles>\r\n)\r\n\r\nclass SegmentDetails extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n  \r\n  handleSubmit(values) {\r\n    console.log(values);\r\n  };\r\n  \r\n  \r\n  \r\n  render() {\r\n    \r\n    var maringLeft0Style = {\r\n      marginLeft:0,\r\n    };\r\n    \r\n    return (\r\n      <Styles>\r\n        <Form\r\n          onSubmit={this.props.handleSubmit}\r\n          initialValues={{ panelType: 'Cement_Board', segmentheight: 900, segmenwidth: 2300 }}\r\n\r\n          validate={values => {\r\n            const errors = {};\r\n            if (!values.segmentheight) {\r\n              errors.segmentheight = \"Required\";\r\n            } else if (values.segmentheight < 0) {\r\n              errors.segmentheight = \"Must be positive\";\r\n            }\r\n\r\n            if (!values.segmenwidth) {\r\n              errors.segmenwidth = \"Required\";\r\n            } else if (values.segmenwidth < 0) {\r\n              errors.segmenwidth = \"Must be positive\";\r\n            }\r\n\r\n            return errors;\r\n          }}\r\n\r\n          render={({ handleSubmit, form, reset, submitting, pristine, values }) => (\r\n            <form\r\n              onSubmit={handleSubmit}\r\n            >\r\n              <Field name=\"segmentheight\">\r\n                {({ input, meta }) => (\r\n                  <div>\r\n                    <label>X:</label>\r\n                    <input {...input} type=\"number\" placeholder=\"Segment height in mm\" />\r\n                    {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                  </div>\r\n                )}\r\n              </Field>\r\n              <Field name=\"segmenwidth\">\r\n                {({ input, meta }) => (\r\n                  <div>\r\n                    <label>Y:</label>\r\n                    <input {...input} type=\"number\" placeholder=\"Segment width in mm\" />\r\n                    {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                  </div>\r\n                )}\r\n              </Field>\r\n              <div style={maringLeft0Style}>\r\n                <Field name=\"panelType\" component=\"select\" style={maringLeft0Style}>\r\n                  <option value=\"Cement_Board\">Aquapanel Cement Board Floor</option>\r\n                  <option value=\"Cement_Board_MF\">Aquapanel Cement Board Floor MF</option>\r\n                  <option value=\"Indoor_Panel\">Aquapanel Indoor Panel</option>\r\n                </Field>\r\n              </div>\r\n              <div>\r\n                <label>Requirements</label>\r\n                <div>\r\n                  <label>\r\n                    <Field\r\n                      name=\"requirements\"\r\n                      component=\"input\"\r\n                      type=\"checkbox\"\r\n                      value=\"radiationProtection\"\r\n                    />{' '}\r\n                    Radiation protection\r\n            </label>\r\n                  <label>\r\n                    <Field\r\n                      name=\"requirements\"\r\n                      component=\"input\"\r\n                      type=\"checkbox\"\r\n                      value=\"bulletproofWall\"\r\n                    />{' '}\r\n                    Bulletproof wall\r\n            </label>\r\n                </div>\r\n              </div>\r\n              <label>Optional Additional Materials</label>\r\n              <div style={maringLeft0Style}>\r\n                <Field name=\"additionl\" component=\"select\" type=\"select\" multiple style={maringLeft0Style}>\r\n                  <option value=\"kleber\">Aquapanel Nutkleber</option>\r\n                  <option value=\"tipla\">Aquapanel Tiple</option>\r\n                  <option value=\"armierungsband\">Aquapanel Armierungsband aussen</option>\r\n                  <option value=\"fugen\">Aquapanel Fugen und Flächenspachtel</option>\r\n                  <option value=\"gruierung\">Aquapanel Grundierung aussen</option>\r\n                  <option value=\"gewebe\">Aquapanel Gewebe plus</option>\r\n                </Field>\r\n              </div>\r\n              <div>\r\n                <label>Notes</label>\r\n                <Field name=\"notes\" component=\"textarea\" placeholder=\"Notes\" />\r\n              </div>\r\n              <div className=\"buttons\">\r\n                <button\r\n                  type=\"submit\"\r\n                  // onClick={props.onClick}\r\n                  disabled={submitting}\r\n                >\r\n                  Add Segment\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={form.reset}\r\n                  disabled={submitting || pristine}\r\n                >\r\n                  Reset\r\n                </button>\r\n              </div>\r\n              {/* <pre>{JSON.stringify(values, 0, 2)}</pre> */}\r\n            </form>\r\n          )}\r\n        />\r\n      </Styles >\r\n    )\r\n  }\r\n}\r\n\r\nconst Segment = (props) => (\r\n  <Styles >\r\n    <div className=\"use-style\">\r\n      <p>Segment: {props.segment.segment.panelType}, size: {props.segment.segment.segmentheight} x {props.segment.segment.segmenwidth}</p>\r\n      <p>Segment price: {props.segment.price.toLocaleString(navigator.language, { minimumFractionDigits: 2 })}</p>\r\n      <button onClick={props.deleteSegmentOnClick}>delete segment</button>\r\n      <button disabled>edit segment</button>\r\n    </div>\r\n  </Styles >\r\n)\r\n\r\nclass Project extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      segments: [],\r\n      customer: {},\r\n      price: 0,\r\n    };\r\n  }\r\n\r\n  // save sagment to segments\r\n  saveSegmentOnClick(segment) {\r\n    const id = uuid.v1();\r\n\r\n    const price = priceCalc(segment);\r\n\r\n    this.setState(prevState => ({\r\n      segments: [...prevState.segments, { id, segment, price }],\r\n      price: [...prevState.segments, { id, segment, price }].reduce(function (acc, obj) { return acc + obj.price; }, 0)\r\n    }));\r\n\r\n    // console.log(segments);\r\n  }\r\n\r\n  deleteSegmentOnClick(id) {\r\n    // create copy of existing segments.\r\n    const segments = this.state.segments.slice();\r\n\r\n    // find index which has to be removed.\r\n    const indexToRemove = segments.findIndex(seg => seg.id === id);\r\n\r\n    // remove element from copied list.\r\n    segments.splice(indexToRemove, 1)\r\n\r\n    // update price:\r\n    const price = segments.reduce(function (acc, obj) { return acc + obj.price; }, 0)\r\n\r\n    // update old list to new list.\r\n    this.setState({\r\n      segments: segments,\r\n      price: price\r\n    });\r\n\r\n  }\r\n\r\n  loadSegmentOnClick() {\r\n    // TODO\r\n  }\r\n\r\n  handleCompleteProject() {\r\n    /*\r\n    const document = {\r\n      \"totalPrice\": this.state.price,\r\n      \"segments\": this.state.segments,\r\n      \"customer\": this.state.customer,\r\n    };\r\n    */\r\n\r\n    // JSON.stringify(document, 0, 2))\r\n\r\n    alert(\"Calculation saved, pdf with details has been emaild to you!\")\r\n\r\n    }\r\n\r\n  myOnChange(values) {\r\n    this.setState({\r\n      customer: values\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n\r\n        <Styles >\r\n          <div className=\"use-style\">\r\n            <h1>Simple Calculator</h1>\r\n            <a href=\"https://knauf.hr/diy/kontakt\">\r\n              help\r\n            </a>\r\n          </div>\r\n        </Styles >\r\n\r\n        <CustomerDetails onChange={(values) => this.myOnChange(values)} />\r\n\r\n        <SegmentDetails handleSubmit={(values) => this.saveSegmentOnClick(values)} />\r\n\r\n        <Styles >\r\n          <div className=\"use-style\">\r\n            <p>Price: {this.state.price.toLocaleString(navigator.language, { minimumFractionDigits: 2 })}</p>\r\n\r\n            <button onClick={() => this.handleCompleteProject()}>Save, generate .pdf and send email</button>\r\n          </div>\r\n        </Styles >\r\n\r\n        {this.state.segments.map((segment) => {\r\n          return (\r\n            <Segment\r\n              key={segment.id}\r\n              segment={segment}\r\n              deleteSegmentOnClick={() => this.deleteSegmentOnClick(segment.id)}\r\n            />\r\n          )\r\n        })}\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Project />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}